{% extends "layout.twig" %}

{% block title %}
Ver Productos - Mi Colmado
{% endblock %}

{% block enlaces %}
<ul class="menu">
    <li><a href="inicio-proveedor.php">Inicio</a></li>
    <li><a href="agregar-producto.php">Agregar productos</a></li>
    <li><a href="ver-productos.php">Ver productos</a></li>
    <li><a href="pedidos-pendientes.php">Pedidos pendientes</a></li>
    <li><a href="#">Sobre nosotros</a></li>
</ul>
{% endblock %}

{% block enlaces_logo %}
<a href="inicio-proveedor.php"><img src="/public/assets/img/android-chrome-512x512.png" alt="Mi colmado"><span id="nombre-emp">MI COLMADO</span></a>
{% endblock %}

{% block content %}
<div class="container-main">
    <h2>MI INVENTARIO</h2>

    {% if mensaje %}
        <div class="alert">
            <p>{{ mensaje }}</p>
        </div>
    {% endif %}

    <div class="filters">
        <div class="search-container">
            <i class="bi bi-search"></i> <input type="text" id="search-bar" placeholder="Buscar producto..." onkeyup="filterTable()">
        </div>
    
        <div class="filter-container">
            <label for="filter-limit">Mostrar:</label>
            <select id="filter-limit" onchange="applyFilterLimit()">
                <option value="all">Todos</option>
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="20">20</option>
            </select>
        </div>
    </div>

    <table class="tg">
        <thead>
            <tr>
                <th class="tg-0lax">Nombre <span class="sort-icon" onclick="toggleSort(this, 0, 'alpha')"><i class="bi bi-sort-alpha-down"></i></span></th>
                <th class="tg-0lax">Precio <span class="sort-icon" onclick="toggleSort(this, 1, 'numeric')"><i class="bi bi-sort-numeric-down"></i></span></th>
                <th class="tg-0lax">Stock <span class="sort-icon" onclick="toggleSort(this, 2, 'numeric')"><i class="bi bi-sort-numeric-down"></i></span></th>
                <th class="tg-0lax">Imagen</th>
                <th class="tg-0lax">Acciones</th>
            </tr>
        </thead>
        
        <tbody id="product-table">
            {% for producto in productos %}
                <tr id="row-{{ producto.id }}">
                    <td class="tg-0lax">{{ producto.nombre }}</td>
                    <td class="tg-0lax">${{ producto.precio }}</td>
                    <td class="tg-0lax">{{ producto.stock }}</td>
                    <td class="tg-0lax"><img id="img-producto" src="{{ producto.imagen }}" width="100"></td>
                    <td class="tg-0lax" id="acciones">
                        <button id="modify-btn" onclick="location.href='modificar-producto.php?id={{ producto.id }}'">MODIFICAR</button>
                        
                        <form id="delete-form-{{ producto.id }}" style="display:inline;">
                            <input type="hidden" name="id" value="{{ producto.id }}">
                            <button id="delete-btn" type="button" onclick="confirmDelete({{ producto.id }})">ELIMINAR</button>
                        </form>
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script>
    let lastSortedColumn = null;
    let lastSortDirection = 'asc';
    let filterLimit = "all";

    function toggleSort(element, columnIndex, type) {
        const table = document.getElementById("product-table");
        const rows = Array.from(table.rows);
        const icon = element.querySelector("i");

        const isSameColumn = lastSortedColumn === columnIndex;
        let isAscending = isSameColumn ? lastSortDirection !== 'asc' : true;
        lastSortedColumn = columnIndex;
        lastSortDirection = isAscending ? 'asc' : 'desc';

        document.querySelectorAll(".sort-icon i").forEach(i => {
            if (i.classList.contains("bi-sort-alpha-down") || i.classList.contains("bi-sort-alpha-up")) {
                i.className = "bi bi-sort-alpha-down";
            } else {
                i.className = "bi bi-sort-numeric-down";
            }
        });

        if (type === 'alpha') {
            icon.className = isAscending ? "bi bi-sort-alpha-up" : "bi bi-sort-alpha-down";
        } else {
            icon.className = isAscending ? "bi bi-sort-numeric-up" : "bi bi-sort-numeric-down";
        }

        const sortedRows = rows.sort((a, b) => {
            const aText = a.cells[columnIndex].textContent.trim();
            const bText = b.cells[columnIndex].textContent.trim();
            return type === 'numeric'
                ? (isAscending ? aText - bText : bText - aText)
                : (isAscending ? aText.localeCompare(bText) : bText.localeCompare(aText));
        });

        sortedRows.forEach(row => table.appendChild(row));
    }

    function applyFilterLimit() {
        filterLimit = document.getElementById("filter-limit").value;
        const rows = document.querySelectorAll("#product-table tr");
        let visibleCount = 0;

        rows.forEach(row => {
            if (filterLimit === "all" || visibleCount < filterLimit) {
                row.style.display = "";
                visibleCount++;
            } else {
                row.style.display = "none";
            }
        });
    }

    function filterTable() {
        const searchInput = document.getElementById("search-bar").value.toLowerCase();
        const rows = document.querySelectorAll("#product-table tr");
        let visibleCount = 0;

        rows.forEach(row => {
            const nameCell = row.querySelector("td:nth-child(1)");
            if (nameCell && nameCell.textContent.toLowerCase().includes(searchInput)) {
                if (filterLimit === "all" || visibleCount < filterLimit) {
                    row.style.display = "";
                    visibleCount++;
                } else {
                    row.style.display = "none";
                }
            } else {
                row.style.display = "none";
            }
        });
    }

    function confirmDelete(productId) {
        swal({
            title: "¿Estás seguro?",
            text: "Una vez eliminado, no podrás recuperar este producto.",
            icon: "warning",
            buttons: ["Cancelar", "Eliminar"],
            dangerMode: true,
        }).then((willDelete) => {
            if (willDelete) {
                fetch("eliminar-producto.php", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    body: `id=${encodeURIComponent(productId)}`
                })
                .then(response => response.text().then(text => ({ ok: response.ok, text })))
                .then(({ ok, text }) => {
                    if (ok) {
                        document.getElementById(`row-${productId}`).remove();
                        swal("El producto ha sido eliminado correctamente.", { icon: "success" });
                    } else {
                        swal("Error: " + text, { icon: "error" });
                    }
                })
                .catch(() => {
                    swal("Error al procesar la solicitud.", { icon: "error" });
                });
            }
        });
    }
</script>
{% endblock %}
