{% extends "layout.twig" %}

{% block title %}
Inicio Consumidor - Mi Colmado
{% endblock %}

{% block enlaces %}
<ul class="menu">
    <li><a href="ver-todo.php">Ver productos</a></li>
    <li><a href="compra.php">Carrito de compras</a></li>
    <li><a href="#">Sobre nosotros</a></li>
</ul>
{% endblock %}

{% block enlaces_logo %}
<a href="inicio-consumidor.php"><img src="/public/assets/img/android-chrome-512x512.png" alt="Mi colmado"><span
        id="nombre-emp">MI COLMADO</span></a>
{% endblock %}

{% block content %}

<div id="carouselExampleControls" class="carousel slide" data-ride="carousel" data-pause="false">
    <div class="carousel-inner">
        <div class="carousel-item active">
            <img class="d-block w-100" style="object-position: bottom;" src="/public/assets/img/slider-organizando.jpg"
                alt="Productos frescos">
            <div class="slider-overlay">
                <h1>productos siempre frescos</h1>
            </div>
        </div>
        <div class="carousel-item">
            <img class="d-block w-100" src="/public/assets/img/slider-colmadero.jpg" alt="Variedades de productos">
            <div class="slider-overlay">
                <h1>Realiza tus pedidos ahora mismo</h1>
            </div>
        </div>
        <div class="carousel-item">
            <img class="d-block w-100" src="/public/assets/img/slider-deliveri.jpeg" alt="deliveries a la orden">
            <div class="slider-overlay">
                <h1>Deliveries siempre listos para entregar tus pedidos</h1>
            </div>
        </div>
    </div>
    <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>

<!-- Filtros -->
<div class="filters">
    <h4 id="txt-especial">ESPECIALES DEL DÍA</h4>
    <a id="a-show-all" href="ver-todo.php" onclick="showAllProducts()">Ver todos +</a>
</div>

<!-- Contenedor de productos -->
<div class="product-list">
    {% for producto in productos %}
    <div class="product-card">
        <div class="img-product">
            <img src="{{ producto.imagen }}" alt="{{ producto.nombre }}"
                onerror="this.src='/public/assets/img/no-image.png'">
        </div>
        <h3>{{ producto.nombre }}</h3>
        <p>Precio: ${{ producto.precio }}</p>
        <p>Stock: {{ producto.stock }}</p>
        <div class="cantidad-container">
            <input type="number" class="cantidad-input" data-id="{{ producto.id }}" value="1" min="1"
                max="{{ producto.stock }}">
        </div>
        <button class="btn-agregar" data-id="{{ producto.id }}">Agregar al carrito</button>
    </div>
    {% endfor %}
</div>
<p id="no-results" style="display: none; text-align: center; margin-top: 20px; font-weight: bold;">
    No se encontraron productos.
</p>


<script>
    // Variables para controlar los productos visibles y el filtrado
    let visibleProducts = 5; // Solo mostrar 5 productos por defecto
    let allProducts = []; // Para almacenar todos los productos

    // Función para inicializar el producto y almacenar todos los productos
    function initProducts() {
        const products = document.querySelectorAll(".product-list .product-card");
        allProducts = Array.from(products); // Almacena todos los productos en un array

        // Solo mostrar los primeros 5 productos inicialmente
        products.forEach((product, index) => {
            if (index >= visibleProducts) {
                product.style.display = "none"; // Oculta los productos que exceden el límite
            }
        });
    }

    // Función para mostrar todos los productos cuando se hace clic en "Ver todos +"
    function showAllProducts() {
        const products = document.querySelectorAll(".product-list .product-card");
        products.forEach(product => {
            product.style.display = ""; // Muestra todos los productos
        });
        document.getElementById("a-show-all").style.display = "none"; // Oculta el enlace "Ver todos +"
    }

    // Función para filtrar productos por nombre
    function filterTable() {
        const searchInput = document.getElementById("search-bar").value.toLowerCase();  // Obtener texto de búsqueda
        let visibleCount = 0;

        allProducts.forEach(product => {
            const name = product.querySelector("h3").textContent.toLowerCase();  // Nombre del producto

            // Si el nombre incluye el texto de búsqueda, mostrar el producto
            if (name.includes(searchInput)) {
                product.style.display = "";  // Mostrar producto
                visibleCount++;
            } else {
                product.style.display = "none";  // Ocultar producto
            }
        });
    }

    function filterTable() {
        const searchInput = document.getElementById("search-bar").value.toLowerCase();
        let visibleCount = 0;

        allProducts.forEach(product => {
            const name = product.querySelector("h3").textContent.toLowerCase();

            if (name.includes(searchInput)) {
                product.style.display = "";
                visibleCount++;
            } else {
                product.style.display = "none";
            }
        });

        const noResultsMessage = document.getElementById("no-results");
        noResultsMessage.style.display = (visibleCount === 0) ? "block" : "none";
    }


    document.addEventListener('DOMContentLoaded', () => {
        // Inicializar productos cuando la página cargue
        initProducts();

        // Evento de búsqueda en el input
        const searchBar = document.getElementById("search-bar");
        searchBar.addEventListener("keyup", filterTable);  // Ejecuta filterTable cada vez que el usuario escribe

        // Agregar productos al carrito
        const botonesAgregar = document.querySelectorAll('.btn-agregar');
        botonesAgregar.forEach(boton => {
            boton.addEventListener('click', async () => {
                const productoId = boton.getAttribute('data-id');
                const cantidadInput = document.querySelector(`.cantidad-input[data-id="${productoId}"]`);
                const cantidad = parseInt(cantidadInput.value);

                if (cantidad <= 0) {
                    Swal.fire('Error', 'La cantidad debe ser mayor a 0.', 'error');
                    return;
                }

                try {
                    const formData = new FormData();
                    formData.append('accion', 'agregar');
                    formData.append('id_producto', productoId);
                    formData.append('cantidad', cantidad);

                    const response = await fetch('inicio-consumidor.php', {
                        method: 'POST',
                        body: formData
                    });

                    const data = await response.json();

                    if (data.success) {
                        Swal.fire('Éxito', data.message, 'success');
                        // Actualizar el carrito dinámicamente si es necesario
                        console.log('Carrito actualizado:', data.carrito);
                    } else {
                        Swal.fire('Error', data.message, 'error');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire('Error', 'Hubo un problema al procesar tu solicitud.', 'error');
                }
            });
        });
    });
</script>

{% endblock %}