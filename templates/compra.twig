{% extends "layout.twig" %}

{% block title %}
Carrito de compras - Mi Colmado
{% endblock %}

{% block enlaces %}
<ul class="menu">
    <li><a href="{{ session_url('ver-todo.php') }}">Ver productos</a></li>
    <li><a href="{{ session_url('compra.php') }}">Carrito de compras</a></li>
    <li><a href="#">Sobre nosotros</a></li>
</ul>
{% endblock %}

{% block enlaces_logo %}
<a href="inicio-consumidor.php"><img src="/public/assets/img/android-chrome-512x512.png" alt="Mi colmado"><span
        id="nombre-emp">MI COLMADO</span></a>
{% endblock %}

{% block content %}
<div class="container">
    <h2>Carrito de Compras</h2>

    {% if mensaje_error %}
    <div class="alert alert-danger">{{ mensaje_error }}</div>
    {% endif %}

    {% if mensaje_exito %}
    <div class="alert alert-success">{{ mensaje_exito }}</div>
    {% endif %}

    {% if carrito|length > 0 %}
    <div class="product-list">
        {% for item in carrito %}
        <div class="product-card">
            <div class="img-product">
                <img src="{{ item.imagen starts with '/' or item.imagen starts with '../' ? item.imagen : '/uploads/' ~ item.imagen }}"
                    alt="{{ item.nombre }}" onerror="this.src='/public/assets/img/denied.webp'; this.onerror=null;"
                    class="img-producto">
            </div>
            <div class="product-details">
                <h3>{{ item.nombre }}</h3>
                <p>Precio: ${{ item.precio }}</p>
                <div class="cantidad-container">
                    <button class="btn-decrementar" data-id="{{ item.id }}" data-stock="{{ item.stock }}">-</button>
                    <input type="number" class="cantidad-input" data-id="{{ item.id }}" value="{{ item.cantidad }}"
                        min="1" max="{{ item.stock }}">
                    <button class="btn-incrementar" data-id="{{ item.id }}" data-stock="{{ item.stock }}">+</button>
                </div>
                <p>Subtotal: $<span class="subtotal" data-id="{{ item.id }}">{{ item.subtotal }}</span></p>
                <button class="btn-eliminar" data-id="{{ item.id }}">Eliminar</button>
            </div>
        </div>
        {% endfor %}
    </div>

    <h3>Resumen de la compra</h3>
    <div class="total-container" id="resumen-compra">
        <!-- Actualizado por JS -->
    </div>
    <button id="btn-pagar" class="btn-finalizar">Finalizar Compra</button>

    <div id="modal-pago" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h3>Finalizar Compra</h3>

            <label for="metodo-pago">Método de Pago:</label>
            <select id="metodo-pago">
                <option value="" selected disabled>Seleccione</option>
                <option value="efectivo">Efectivo</option>
                <option value="tarjeta">Tarjeta</option>
            </select>

            <!-- Formulario de dirección (siempre visible) -->
            <label for="direccion">Dirección de Envío:</label>
            <input type="text" id="direccion" name="direccion" required placeholder="Ingresa tu dirección">

            <div id="formulario-tarjeta" style="display:none;">
                <label for="nombre">Nombre:</label>
                <input type="text" id="nombre" required>
                <label for="tarjeta">Número de Tarjeta:</label>
                <input type="text" id="tarjeta" maxlength="16" required>
                <label for="fecha">Fecha de Expiración:</label>
                <input type="month" id="fecha" required>
                <label for="cvv">CVV:</label>
                <input type="text" id="cvv" maxlength="4" required>
            </div>

            <h4>Total a pagar: $<span id="total-pago">0.00</span></h4>
            <button id="confirmar-pago" class="btn-comprar">Confirmar pago</button>
        </div>
    </div>


    {% else %}
    <div class="carrito-msj">
        <p>Tu carrito está vacío. <a href="inicio-consumidor.php">Agrega productos desde aquí...</a>.</p>
    </div>
    {% endif %}
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const btnPagar = document.getElementById('btn-pagar');
        const modal = document.getElementById('modal-pago');
        const close = document.querySelector('.close');

        btnPagar.addEventListener('click', () => { modal.style.display = 'flex'; updatePago(); });
        close.addEventListener('click', () => { modal.style.display = 'none'; });
        window.addEventListener('click', e => { if (e.target === modal) modal.style.display = 'none'; });

        document.querySelectorAll('.btn-eliminar').forEach(button => {
            button.addEventListener('click', function () {
                const id = this.dataset.id;
                Swal.fire({
                    title: "¿Estás seguro?",
                    text: "El producto será eliminado del carrito.",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#d33",
                    cancelButtonColor: "#3085d6",
                    confirmButtonText: "Eliminar",
                    cancelButtonText: "Cancelar"
                }).then((result) => {
                    if (result.isConfirmed) {
                        const formData = new FormData();
                        formData.append('accion', 'eliminar');
                        formData.append('id_producto', id);
                        const sessionName = "{{ session_name|e('js') }}";
                        fetch('compra.php?session_name=' + encodeURIComponent(sessionName), {
                            method: 'POST',
                            body: formData
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                document.querySelector(`.btn-eliminar[data-id="${id}"]`).closest('.product-card').remove();
                                actualizarTotales();
                                Swal.fire("Eliminado", data.message, "success");
                            } else {
                                Swal.fire("Error", data.message, "error");
                            }
                        });
                    }
                });
            });
        });

        document.querySelectorAll('.btn-incrementar').forEach(button => {
            button.addEventListener('click', function () {
                const id = this.dataset.id;
                const stock = parseInt(this.dataset.stock);
                const input = document.querySelector(`.cantidad-input[data-id="${id}"]`);
                let cantidad = parseInt(input.value);
                if (cantidad < stock) {
                    input.value = ++cantidad;
                    actualizarCantidad(id, cantidad);
                }
            });
        });

        document.querySelectorAll('.btn-decrementar').forEach(button => {
            button.addEventListener('click', function () {
                const id = this.dataset.id;
                const input = document.querySelector(`.cantidad-input[data-id="${id}"]`);
                let cantidad = parseInt(input.value);
                if (cantidad > 1) {
                    input.value = --cantidad;
                    actualizarCantidad(id, cantidad);
                }
            });
        });

        function actualizarCantidad(id, cantidad) {
            const formData = new FormData();
            formData.append('accion', 'actualizar');
            formData.append('id_producto', id);
            formData.append('cantidad', cantidad);
            const sessionName = "{{ session_name|e('js') }}";
            fetch('compra.php?session_name=' + encodeURIComponent(sessionName), {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.querySelector(`.subtotal[data-id="${id}"]`).textContent = data.subtotal;
                    actualizarTotales();
                }
            });
        }

        function actualizarTotales() {
            let total = 0;
            const productos = document.querySelectorAll('.product-card').length;

            document.querySelectorAll('.product-card').forEach(card => {
                const cantidad = parseInt(card.querySelector('.cantidad-input').value) || 1;
                const precio = parseFloat(card.querySelector('p').innerText.replace('Precio: $', ''));
                const subtotal = cantidad * precio;
                card.querySelector('.subtotal').innerText = subtotal.toFixed(2);
                total += subtotal;
            });

            const descuento = total > 50 ? total * 0.10 : 0;
            let envio = 0;

            if (productos > 0) {
                envio = Math.floor(total / 100) * 5;
            }

            const totalFinal = total - descuento + envio;

            const resumen = document.getElementById('resumen-compra');
            resumen.innerHTML = `
            <p>Productos en el carrito: ${productos}</p>
            <p>Descuento: $<span class="subtotal">${descuento.toFixed(2)}</span></p>
            <p>Envío: $<span class="subtotal">${envio.toFixed(2)}</span></p>
            <p>Total: $<span id="total-final" class="subtotal">${totalFinal.toFixed(2)}</span></p>
        `;
        }

        function updatePago() {
            const totalFinal = document.getElementById('total-final').innerText || '0.00';
            document.getElementById('total-pago').innerText = totalFinal;
        }

        function validarLuhn(numero) {
            let sum = 0;
            let alternar = false;
            for (let i = numero.length - 1; i >= 0; i--) {
                let n = parseInt(numero.charAt(i));
                if (alternar) {
                    n *= 2;
                    if (n > 9) n -= 9;
                }
                sum += n;
                alternar = !alternar;
            }
            return sum % 10 === 0;
        }

        const metodoPago = document.getElementById('metodo-pago');
        const formularioTarjeta = document.getElementById('formulario-tarjeta');
        const btnConfirmarPago = document.getElementById('confirmar-pago');

        metodoPago.addEventListener('change', () => {
            formularioTarjeta.style.display = metodoPago.value === 'tarjeta' ? 'block' : 'none';
        });

        btnConfirmarPago.addEventListener('click', () => {
            const metodoSeleccionado = metodoPago.value;

            if (!metodoSeleccionado) {
                return Swal.fire("Método requerido", "Selecciona un método de pago", "warning");
            }

            const direccion = document.getElementById('direccion').value.trim();
            if (!direccion) {
                return Swal.fire("Dirección requerida", "Ingresa tu dirección de envío", "warning");
            }

            let tarjetaData = {};
            if (metodoSeleccionado === 'tarjeta') {
                const nombre  = document.getElementById('nombre').value.trim();
                const tarjeta = document.getElementById('tarjeta').value.replace(/\s+/g, '');
                const fecha   = document.getElementById('fecha').value.trim();
                const cvv     = document.getElementById('cvv').value.trim();

                const regexNombre  = /^[a-zA-Z\s]+$/;
                const regexTarjeta = /^\d{16}$/;
                const regexCVV     = /^\d{3,4}$/;
                const regexFecha   = /^(0[1-9]|1[0-2])\/?([0-9]{2})$/;

                if (!nombre || !tarjeta || !fecha || !cvv) {
                    return Swal.fire("Campos incompletos", "Completa todos los campos de tarjeta", "warning");
                }
                if (!regexNombre.test(nombre)) {
                    return Swal.fire("Nombre inválido", "El nombre solo debe contener letras y espacios", "warning");
                }
                if (!regexTarjeta.test(tarjeta) || !validarLuhn(tarjeta)) {
                    return Swal.fire("Número inválido", "La tarjeta ingresada no es válida", "warning");
                }
                if (!regexCVV.test(cvv)) {
                    return Swal.fire("CVV inválido", "El CVV debe tener 3 o 4 dígitos", "warning");
                }
                if (!regexFecha.test(fecha)) {
                    return Swal.fire("Fecha inválida", "Usa el formato MM/AA", "warning");
                }

                const [mes, año] = fecha.split('/');
                const fechaExp = new Date(`20${año}`, mes);
                if (fechaExp < new Date()) {
                    return Swal.fire("Tarjeta vencida", "La tarjeta ya está caducada", "warning");
                }

                tarjetaData = { nombre, tarjeta, fecha, cvv };
            }

            const formData = new FormData();
            formData.append('accion', 'finalizar');
            formData.append('metodo_pago', metodoSeleccionado);
            formData.append('direccion', direccion);
            if (metodoSeleccionado === 'tarjeta') {
                Object.entries(tarjetaData).forEach(([k, v]) => formData.append(k, v));
            }
            const sessionName = "{{ session_name|e('js') }}";
            fetch('compra.php?session_name=' + encodeURIComponent(sessionName), {
                method: 'POST',
                body: formData
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    Swal.fire("¡Pedido exitoso!", data.message, "success").then(() => location.reload());
                } else {
                    Swal.fire("Error", data.message, "error");
                }
            })
            .catch(err => {
                console.error('Fetch error:', err);
                Swal.fire("Error", "No se pudo procesar el pedido.", "error");
            });
        });

        actualizarTotales();
    });
</script>

{% endblock %}